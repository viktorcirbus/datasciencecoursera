columnindexes= grep("mean()[^F]|std()[^F]",names(dataset))
newdata=dataset[,columnindexes]
rm(columnindexes)
dataset$activity_id=NULL
require(reshape2)
melting=melt(dataset,id.vars=c("activity","subject"),measure.vars=2:562,factorsAsStrings=TRUE)
melting$variable=as.character(melting$variable)
final=ddply(melting,~activity+subject+variable,summarise,mean=mean(value))
str(final)
rm(melting)
rm(dataset)
wd <- getwd()
wd=paste(wd,"/submission.txt",sep = "")
write.csv(final,wd,row.names=F)
rm(wd)
if (!exists("dataset")){
dataset <- read.table("./UCI HAR Dataset/test/X_test.txt", quote="\"")
datasetactivity <- read.table("./UCI HAR Dataset/test/y_test.txt", quote="\"")
datasetsubject <- read.table("./UCI HAR Dataset/test/subject_test.txt", quote="\"")
dataset=cbind(datasetsubject,datasetactivity,dataset)
rm(datasetactivity)
rm(datasetsubject)
}
# if the merged dataset does exist, append to it train data
if (exists("dataset")){
temp_dataset <-read.table("./UCI HAR Dataset/train/X_train.txt", quote="\"")
temp_datasetactivity <-read.table("./UCI HAR Dataset/train/y_train.txt", quote="\"")
temp_datasetsubject <- read.table("./UCI HAR Dataset/train/subject_train.txt", quote="\"")
temp_dataset=cbind(temp_datasetsubject,temp_datasetactivity,temp_dataset)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
rm(temp_datasetactivity)
rm(temp_datasetsubject)
}
if (!exists("dataset")){
dataset <- read.table("./UCI HAR Dataset/test/X_test.txt", quote="\"")
datasetactivity <- read.table("./UCI HAR Dataset/test/y_test.txt", quote="\"")
datasetsubject <- read.table("./UCI HAR Dataset/test/subject_test.txt", quote="\"")
dataset=cbind(datasetsubject,datasetactivity,dataset)
rm(datasetactivity)
rm(datasetsubject)
}
dataset <- read.table("./UCI HAR Dataset/test/X_test.txt", quote="\"")
datasetactivity <- read.table("./UCI HAR Dataset/test/y_test.txt", quote="\"")
datasetsubject <- read.table("./UCI HAR Dataset/test/subject_test.txt", quote="\"")
dataset=cbind(datasetsubject,datasetactivity,dataset)
temp_dataset <-read.table("./UCI HAR Dataset/train/X_train.txt", quote="\"")
temp_datasetactivity <-read.table("./UCI HAR Dataset/train/y_train.txt", quote="\"")
temp_datasetsubject <- read.table("./UCI HAR Dataset/train/subject_train.txt", quote="\"")
temp_dataset=cbind(temp_datasetsubject,temp_datasetactivity,temp_dataset)
dataset<-rbind(dataset, temp_dataset)
melting=melt(dataset,id.vars=c("activity","subject"),measure.vars=2:562,factorsAsStrings=TRUE)
#convert factor to character
melting$variable=as.character(melting$variable)
final=ddply(melting,~activity+subject+variable,summarise,mean=mean(value))
columnindexes= grep("mean()[^F]|std()[^F]",names(dataset))
View(dataset)
datasetcolumnlabels <- read.table("./UCI HAR Dataset/features.txt", quote="\"",stringsAsFactor=F)
#Apply features names (4. Appropriately labels the data set with descriptive variable names.)
colnames(dataset)=c("subject","activity_id",datasetcolumnlabels$V2)
rm(datasetcolumnlabels)
#Get Activity names
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", quote="\"",stringsAsFactor=F)
colnames(activity_labels)=c("activity_id","activity")
#Apply Activity names to dataset with merging (3.Uses descriptive activity names to name the activities in the data set)
subsetdatasetactivityid=as.data.frame(dataset$activity_id)
colnames(subsetdatasetactivityid)=c("id")
mergedata=merge(subsetdatasetactivityid,activity_labels,by.x="id",by.y="activity_id",x.all=all,sort=F)
dataset$activity=mergedata$activity
rm(activity_labels)
rm(mergedata)
rm(subsetdatasetactivityid)
columnindexes= grep("mean()[^F]|std()[^F]",names(dataset))
newdata=dataset[,columnindexes]
View(newdata)
newdata=cbind("subject,"activity",dataset[,columnindexes])
newdata=cbind("subject","activity",dataset[,columnindexes])
meanandstd=dataset[,columnindexes]
wd <- getwd()
wd=paste(wd,"/newdata.txt",sep = "")
write.csv(newdata,wd,row.names=F)
str(newdata)
melting=melt(newdata,id.vars=c("activity","subject"),measure.vars=3:68,factorsAsStrings=TRUE)
View(newdata)
newdata=cbind(subject,activity,meanandstd)
newdata=cbind(dataset$subject,dataset$activity,meanandstd)
wd <- getwd()
wd=paste(wd,"/newdata.txt",sep = "")
write.csv(newdata,wd,row.names=F)
rm(wd)
rm(columnindexes)
melting=melt(newdata,id.vars=c("subject","activity"),measure.vars=3:68,factorsAsStrings=TRUE)
str(newdata)
newdata=cbind(subject=dataset$subject,activity=dataset$activity,meanandstd)
str(newdata)
columnames(newdata[,1])="subject"
columnames(newdata[,2])="activity"
colnames(newdata[,1])="subject"
colnames(newdata[,2])="activity"
names(newdata[,1])="subject"
names(newdata[,2])="activity"
str(newdata)
wd <- getwd()
wd=paste(wd,"/newdata.txt",sep = "")
write.csv(newdata,wd,row.names=F)
rm(wd)
rm(columnindexes)
melting=melt(newdata,id.vars=c("subject","activity"),measure.vars=3:68,factorsAsStrings=TRUE)
melting$variable=as.character(melting$variable)
final=ddply(melting,~activity+subject+variable,summarise,mean=mean(value))
View(newdata)
final=ddply(melting,~subject+activity+variable,summarise,mean=mean(value))
View(final)
?ddply
final=ddply(melting,.(subject,activity,variable),summarise,mean=mean(value))
View(final)
wd <- getwd()
wd=paste(wd,"/submission.txt",sep = "")
write.csv(final,wd,row.names=F)
rm(wd)
View(melting)
View(newdata)
melting=melting[with(melting,order(subject,activity,variable)),]
head(melting,100)
final=ddply(melting,.(subject,activity,variable),summarise,mean=mean(value))
View(melting)
final=ddply(melting,.(subject,activity,variable),mean)
final=ddply(melting,.(subject,activity,variable),mean(value))
final=ddply(melting,.(subject,activity,variable),mean(value))
str(melting)
melting$variable=as.character(melting$variable)
str(melting)
melting$activity=as.character(melting$activity)
str(melting)
melting=melting[with(melting,order(subject,activity,variable)),]
str(melting)
final=ddply(melting,.(subject,activity,variable),mean(value))
final=ddply(melting,.(subject,activity,variable),summarize,mean=mean(value))
View(final)
?melt
str(melting)
?ddply
final=ddply(melting,.(subject,activity,variable),summarize,mean=mean(value),.drop = F)
View(final)
final2=ddply(newdata,.(subject,activity),summarize,mean())
final2=ddply(newdata,.(subject,activity),mean())
final2=ddply(newdata,.(subject,activity),mean)
View(final2)
final2=ddply(newdata,.(subject,activity),mean(3:68))
final2=ddply(newdata,.(subject,activity),mean(newdata[,3:68]))
final2=ddply(newdata,.(subject,activity),mean(newdata[,3:67]))
final2=ddply(newdata,.(subject,activity),summarize,mean=mean(newdata[,3:67]))
final2=ddply(newdata,.(subject,activity),summarize,colmeans))
final2=ddply(newdata,.(subject,activity),summarize,colmeans())
?lapply
?dapply
?dapply
??dapply
install.packages("Kmisc")
library(Kmisc)
?ddply
final2=dapply(newdata,.(subject,activity),summarize,mean())
final2=dapply(newdata,.(subject,activity),.fun=mean())
?dapply
final2=dapply(newdata,mean())
final2=dapply(newdata,by=c("subject","activity"),mean())
final2=dapply(newdata,by=c("subject","activity"),mean)
View(final2)
final2=dapply(newdata,by=c("subject","activity"),mean,stringsAsFactors=FALSE)
final2=dapply(newdata[,3:68],by=c("subject","activity"),mean,stringsAsFactors=FALSE)
View(final2)
final2=dt[, lapply(.SD,mean), by=c("subject","activity")]
final2=newdata[, lapply(.newdata,mean), by=c("subject","activity")]
dt=as.data.table(newdata)
install.packages("data.table")
install.packages("data.table")
library(data.table)
dt=as.data.table(newdata)
final2=dt[, lapply(mean), by=c("subject","activity")]
?data.table
final2=dt[, lapply(.SD,mean), by=c("subject","activity")]
View(final2)
final2=dt[, lapply(.SD,mean), by=c("subject","activity") ,drop = NULL]
final2=dt[, lapply(.SD,mean), by=cbind("subject","activity") ,drop = NULL]
final2=dt[, lapply(.SD,mean), by=cbind(c("subject"),c("activity")) ,drop = NULL]
final2=dt[, lapply(.SD,mean), key="subject,activity" ,drop = NULL]
View(final2)
final2=dt[, lapply(.SD,mean), key="subject,activity" ,allow.cartesian =T]
final2=dt[, lapply(.SD,mean), key="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.SD,mean,na.rm=F), key="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.SD,mean,na.rm=F), keyby="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(mean,na.rm=F), keyby="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.CJ,mean,na.rm=F), keyby="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.SD,mean,na.rm=F), keyby="subject,activity" ,allow.cartesian = T ,drop = NULL,.CJ=T]
final2=dt[, lapply(.SD,mean,na.rm=F), keyby=CJ(dt[,1],dt[,2]) ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.SD,mean), keyby=CJ(dt[,1],dt[,2]) ,allow.cartesian = T ,drop = NULL]
final2=dt[, lapply(.SD,mean), by=CJ(dt[,1],dt[,2]) ,allow.cartesian = T ,drop = NULL]
CJ(dt[,1],dt[,2])
dt[,1]
final2=dt[, lapply(.SD,mean), by=CJ(c("subject"),c("Activity")) ,allow.cartesian = T ,drop = NULL]
CJ(c("subject"),c("Activity")
)
by=CJ(newdata$subject,newdata$Activity
)
CJ(newdata$subject,newdata$Activity)
CJ(newdata$subject,newdata$activity)
dt[CJ(subject,activity)]
final2=dt[, lapply(.SD,mean), by="subject,activity" ,allow.cartesian = T ,drop = NULL,.SDcols=3:68]
final2=dt[, lapply(.SD,mean), by="subject,activity" ,allow.cartesian = T ,drop = NULL]
final2=dt[,lapply(.SD,mean), by="subject,activity" ,allow.cartesian = T ,drop = NULL]
final3=dt[, lapply(.SD,mean), by=c("subject","activity")]
CJ(newdata$subject,newdata$activity)
library(data.table)
dt=as.data.table(newdata)
?summarise_each
install.packages("plyr")
install.packages("plyr")
library(plyr)
?summarise_each
brary(plyr)
library(plyr)
?summarise_each
str(newdata)
final3=dt[, lapply(.SD,mean), by=list(subject,activity)]
final3=dt[,lapply(.SD,mean), by=list(subject,activity)]
str(dt)
final3=dt[,lapply(.SD,mean), by=list(subject,activity)]
dt=as.data.table(newdata)
library(data.table)
dt=as.data.table(newdata)
str(dt)
final3=dt[,lapply(.SD,mean), by=list(subject,activity)]
View(final3)
list(subject,activity)
list(newdata$subject,newdata$activity)
final3=dt[,lapply(.SD,mean), by=list(subject,activity),allow.cartesian = T ]
newdata$group=paste(newdata$subject, '_', newdata$activity, sep = "")
dt=as.data.table(newdata)
final3=dt[,lapply(.SD,mean), by=list(group),allow.cartesian = T ]
final3=dt[,lapply(.SD,mean), by="group",allow.cartesian = T ]
str(newdata)
str(dt)
final3=dt[,lapply(.SD,mean), by="group",drop = NULL]
View(final3)
str(melting)
final3=dt[,lapply(.SD,mean), by="group",drop = NULL]
View(final3)
str(final3)
dt=as.data.table(newdata)
final3=dt[,lapply(.SD,mean), by="group",drop = NULL]
split(newdata,group)
?split
split(newdata,group,drop = FALSE)
str(newdata)
split(newdata,as.factor(group),drop = FALSE)
split(newdata,as.factor(newdata$group),drop = FALSE)
str(dt)
df=dt
df=newdata
apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,6]))})
apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,2]))})
final4=apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,2]))})
View(final4)
final4=apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,1]))})
View(final4)
final4=apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,3]))})
View(final4)
View(final3)
str(newdata)
newdata$activity=as.character(newdata$activity)
str(newdata)
newdata$group=paste(newdata$subject, '_', newdata$activity, sep = "")
final4=apply(df[,3:68], 2, function(x) {sapply(split(data.frame(df[,1:2], x), df$group), function(y) mean(y[,3]))})
View(final4)
setkey(dt, subject, activity)
dtTidy <- dt[, list(count = .N, average = mean(value)), by = key(dt)]
final3=dt[,lapply(.SD,mean), by = key(dt),drop = NULL]
?setkey
final3=dt[,lapply(.SD,mean), by = key(dt),drop = NULL]
str(dt)
dt$group=NULL
newdata$group=NULL
dt=as.data.table(newdata)
setkey(dt, subject, activity)
final3=dt[,lapply(.SD,mean), by = key(dt),drop = NULL]
View(dt)
newdata$activity=as.character(newdata$activity)
dt=as.data.table(newdata)
str(dt)
setkey(dt, subject, activity)
final3=dt[,lapply(.SD,mean), by = key(dt),drop = NULL]
dcast(melting, subject + activity ~ variable, mean)
library(reshape2)
dcast(melting, subject + activity ~ variable, mean)
final5=dcast(melting, subject + activity ~ variable, mean)
?dcast
final5=dcast(melting, subject + activity ~ variable, mean,drop=false)
final5=dcast(melting, subject + activity ~ variable, mean,drop=F)
View(final5)
final5=dcast(melting, subject + activity ~ variable, mean,drop=F,rm.na=F)
View(final5)
View(final5)
final5=dcast(melting, subject + activity ~ variable, mean,drop=F,rm.na=T)
View(final5)
final5=dcast(melting, subject + activity ~ variable, fun=(mean,na.rm=TRUE),drop=F)
final5=dcast(melting, subject + activity ~ variable, fun=(mean,na.rm=TRUE),drop=F)
final5=dcast(melting, subject + activity ~ variable, fun=(mean,na.rm=TRUE),drop=F)
newmelting <- na.omit(melting)
final5=dcast(melting, subject + activity ~ variable, FUN=(mean,na.rm=TRUE),drop=F)
final5=dcast(melting, subject + activity ~ variable, FUN=(mean),drop=F)
final5=dcast(melting, subject + activity ~ variable, FUN=mean,drop=F)
final5=dcast(melting, subject + activity ~ variable, mean,drop=F)
tidy = aggregate(newmelting, by=list(activity = newmelting$activity, newmelting=allData$subject), mean)
tidy = aggregate(newmelting, by=list(activity = newmelting$activity, subject=newmelting$subject), mean)
str(newdata)
dataset2 <- ddply(dataset, .(subject, activity), .fun=function(x){ colMeans(x[,-c(1:2)]) })
str(newdata)
dataset2 <- ddply(newdata, .(subject, activity), .fun=function(x){ colMeans(x[,-c(1:2)]) })
dataset2 <- ddply(newdata, .(subject, activity), .fun=function(x){ colMeans(x[,-c(1:2)].na.rm=T) })
dataset2 <- ddply(newdata, .(subject, activity), .fun=function(x){ colMeans(x[,-c(1:2)],na.rm=T) })
dataset2 <- ddply(newdata, .(subject, activity), .fun=function(x){ colMeans(x[,-c(1:2)],na.rm=T) },na.rm = TRUE)
result=as.data.frame()
result=as.data.frame(0)
View(result)
result=as.data.frame(68)
View(result)
result=as.data.frame
row = 1
for (s in 1:30) {
for (a in 1:6) {
result[row, 1] = s
result[row, 2] = a
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
result=data.frame(6*30,68)
View(result)
row = 1
for (s in 1:30) {
for (a in 1:6) {
result[row, 1] = s
result[row, 2] = a
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
activities = unique(newdata)[,2]
?unique
activities = unique(newdata[,2])
activities = unique(newdata[,2])
subjects = unique(newdata[,1])
result=newdata(1:6*30,1:68)
result=newdata[1:6*30,1:68]
View(result)
result=newdata[1:180,1:68]
View(result)
row = 1
for (s in 1:lenght(subjects)) {
for (a in 1:lenght(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:numCols] <- colMeans(tmp[, 3:numCols])
row = row+1
}
}
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:numCols] <- colMeans(tmp[, 3:68])
row = row+1
}
}
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:68] <- colMeans(tmp[, 3:68])
row = row+1
}
}
View(result)
activities = sort(unique(newdata[,2]))
subjects = sort(unique(newdata[,1]))
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==a, ]
result[row, 3:68] <- colMeans(tmp[, 3:68])
row = row+1
}
}
View(result)
str(newdata)
View(result)
newdata[newdata$subject==1 & newdata$activity=="LAYING", ]
newdata[newdata$subject==1 , ]
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==activity[a], ]
result[row, 3:68] <- colMeans(tmp[, 3:68])
row = row+1
}
}
row = 1
for (s in 1:length(subjects)) {
for (a in 1:length(activities)) {
result[row, 1] = subjects[s]
result[row, 2] = activities[a]
tmp <- newdata[newdata$subject==s & newdata$activity==activities[a], ]
result[row, 3:68] <- colMeans(tmp[, 3:68])
row = row+1
}
}
View(result)
result <- matrix(NA, nrow=30*6, ncol=68)
View(result)
melting=melt(newdata,id.vars=c("subject","activity"),measure.vars=3:68,factorsAsStrings=TRUE)
melting$variable=as.character(melting$variable)
melting$activity=as.character(melting$activity)
final=dcast(melting, subject + activity ~ variable, mean,drop=F)
View(final)
wd <- getwd()
wd=paste(wd,"/submission.txt",sep = "")
write.csv(final,wd,row.names=F)
rm(wd)
getwd()
View(final)
summary(melting)
# if the merged dataset doesn't exist, create it from test data
if (!exists("dataset")){
dataset <- read.table("./UCI HAR Dataset/test/X_test.txt", quote="\"")
datasetactivity <- read.table("./UCI HAR Dataset/test/y_test.txt", quote="\"")
datasetsubject <- read.table("./UCI HAR Dataset/test/subject_test.txt", quote="\"")
dataset=cbind(datasetsubject,datasetactivity,dataset)
rm(datasetactivity)
rm(datasetsubject)
}
# if the merged dataset does exist, append to it train data
if (exists("dataset")){
temp_dataset <-read.table("./UCI HAR Dataset/train/X_train.txt", quote="\"")
temp_datasetactivity <-read.table("./UCI HAR Dataset/train/y_train.txt", quote="\"")
temp_datasetsubject <- read.table("./UCI HAR Dataset/train/subject_train.txt", quote="\"")
temp_dataset=cbind(temp_datasetsubject,temp_datasetactivity,temp_dataset)
dataset<-rbind(dataset, temp_dataset)
rm(temp_dataset)
rm(temp_datasetactivity)
rm(temp_datasetsubject)
}
#Get features names
datasetcolumnlabels <- read.table("./UCI HAR Dataset/features.txt", quote="\"",stringsAsFactor=F)
#Apply features names (4. Appropriately labels the data set with descriptive variable names.)
colnames(dataset)=c("subject","activity_id",datasetcolumnlabels$V2)
rm(datasetcolumnlabels)
#Get Activity names
activity_labels <- read.table("./UCI HAR Dataset/activity_labels.txt", quote="\"",stringsAsFactor=F)
colnames(activity_labels)=c("activity_id","activity")
#Apply Activity names to dataset with merging (3.Uses descriptive activity names to name the activities in the data set)
subsetdatasetactivityid=as.data.frame(dataset$activity_id)
colnames(subsetdatasetactivityid)=c("id")
mergedata=merge(subsetdatasetactivityid,activity_labels,by.x="id",by.y="activity_id",x.all=all,sort=F)
dataset$activity=mergedata$activity
rm(activity_labels)
rm(mergedata)
rm(subsetdatasetactivityid)
#Find column names that have mean or std in it exclude Freq columns
columnindexes= grep("mean()[^F]|std()[^F]",names(dataset))
meanandstd=dataset[,columnindexes]
#2. Extracts only the measurements on the mean and standard deviation for each measurement into new data set called newdata
newdata=cbind(subject=dataset$subject,activity=dataset$activity,meanandstd)
names(newdata[,1])="subject"
names(newdata[,2])="activity"
wd <- getwd()
wd=paste(wd,"/newdata.txt",sep = "")
write.csv(newdata,wd,row.names=F)
rm(wd)
rm(columnindexes)
melting=melt(newdata,id.vars=c("subject","activity"),measure.vars=3:68,factorsAsStrings=TRUE)
wd <- getwd()
wd=paste(wd,"/melting.csv",sep = "")
write.csv(newdata,wd,row.names=F)
wd <- getwd()
wd=paste(wd,"/melting.csv",sep = "")
write.csv(melting,wd,row.names=F)
rm(wd)
rm(dataset)
rm(meanandstd)
rm(melting)
rm(newdata)
